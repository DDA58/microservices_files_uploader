version: '3.5'

services:
  files_uploader:
    build:
      context: ${REL_PATH_FILES_UPLOADER:-.}/
      dockerfile: ./docker/Dockerfile
    image: files_uploader
    container_name: ${APP_NAME}_files_uploader
    restart: unless-stopped
    working_dir: /var/www/app
    volumes:
      - ${REL_PATH_FILES_UPLOADER:-.}/:/var/www/app
  nginx_files_uploader:
    image: nginx:alpine
    container_name: ${APP_NAME}_files_uploader_nginx
    restart: unless-stopped
    ports:
    - "8282:80"
    volumes:
      - ${REL_PATH_FILES_UPLOADER:-.}/:/var/www/app
      - ${REL_PATH_FILES_UPLOADER:-.}/docker/nginx:/etc/nginx/conf.d
    depends_on:
      - files_uploader
  db_files:
    image: mysql:8
    container_name: db_files
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - "./docker/db_files:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: db_files
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
  rabbitmq:
    image: rabbitmq:3-management
    container_name: ${APP_NAME}_rabbitmq
    volumes:
      #- ./docker/rabbitmq/etc/:/etc/rabbitmq/
      - ./docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ./docker/rabbitmq/logs/:/var/log/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
  worker_files_uploader_failings_broker_jobs:
    build:
      context: ${REL_PATH_FILES_UPLOADER:-.}/
      dockerfile: ./docker/Dockerfile
    image: files_uploader
    container_name: ${APP_NAME}_worker_files_uploader_failings_broker_jobs
    restart: unless-stopped
    working_dir: /var/www/app
    command: 'sh -c "sleep 10 && php artisan broker_fails_handler:start"'
    volumes:
      - ${REL_PATH_FILES_UPLOADER:-.}/:/var/www/app
    depends_on:
      - rabbitmq
      - files_uploader
#  minio:
#    image: minio/minio
#    volumes:
#      - data:/data
#    ports:
#      - "9001:9000"
#      - "9002:9001"
#    environment:
#      MINIO_ROOT_USER: minio
#      MINIO_ROOT_PASSWORD: minio123
#    command: "server --console-address ':9001' /data"

volumes:
    data:

networks:
  default:
    name: microservices
